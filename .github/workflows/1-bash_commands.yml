name: Step 1, Bash commands

# This step triggers after TBD-step-1-event-desc.
# This workflow updates from step 1 to step 2.

# This will run every time we TBD-step-1-event-desc.
# Reference: https://docs.github.com/en/actions/learn-github-actions/events-that-trigger-workflows
on:
  workflow_dispatch:
  # this should run when the PR is merged
  push:
    branches:
      - main
  pull_request:
    branches:
      - main


# Reference: https://docs.github.com/en/actions/security-guides/automatic-token-authentication
permissions:
  # Need `contents: read` to checkout the repository.
  # Need `contents: write` to update the step metadata.
  contents: write

jobs:
  # Get the current step to only run the main job when the learner is on the same step.
  get_current_step:
    name: Check current step number
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - id: get_step
        run: |
          echo "current_step=$(cat ./.github/steps/-step.txt)" >> $GITHUB_OUTPUT
    outputs:
      current_step: ${{ steps.get_step.outputs.current_step }}

  check_results:
    name: Check results
    needs: get_current_step

    # We will only run this action when:
    # 1. This repository isn't the template repository.
    # 2. The step is currently 1.
    # Reference: https://docs.github.com/en/actions/learn-github-actions/contexts
    # Reference: https://docs.github.com/en/actions/learn-github-actions/expressions
    if: >-
      ${{ !github.event.repository.is_template
          && needs.get_current_step.outputs.current_step == 1 }}

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Let's get all the branches.

      - name: Check the file
        uses: skills/action-check-file@v1
        with:
          file: "week1/file1.txt" # todo
          search: "Hello"
      

  update_to_week2:
    name: Update to week 2
    needs: [get_current_step, check_results]

    # We will only run this action when:
    # 1. This repository isn't the template repository.
    # 2. The step is currently 1.
    # 3. when the PR is merged to main
    # Reference: https://docs.github.com/en/actions/learn-github-actions/contexts
    # Reference: https://docs.github.com/en/actions/learn-github-actions/expressions
    if: >-
      ${{ !github.event.repository.is_template
          && needs.get_current_step.outputs.current_step == 1 
          && github.event_name == 'push' && github.ref == 'refs/heads/main' }}

    # We'll run Ubuntu for performance instead of Mac or Windows.
    runs-on: ubuntu-latest

    steps:
      # We'll need to check out the repository so that we can edit the README.
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Let's get all the branches.

      # In README.md, switch step 1 for step 2.
      - name: Update to week 2
        uses: skills/action-update-step@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          from_step: 1
          to_step: 2
          #branch_name: step1

      # In README.md, switch step 1 for step 2.
      - name: Update to week 2
        uses: skills/action-update-step@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          from_step: 1
          to_step: 2
          #branch_name: step1

      - name: Create a new branch
        run: | 
          echo "Make a branch"
          BRANCH=week2
          git checkout -b $BRANCH 
          # copy the current README.md to week1
          cp .github/steps/1-intro.md week1/README.md
          git add week1/README.md      
          cp -r .github/working_dir/week2 .
          git config user.name github-actions[bot]
          git config user.email github-actions[bot]@users.noreply.github.com
          git add week2/*
          git commit -m "Add step working directory for step 2"
          git push origin $BRANCH
          echo "Push"
          git push --set-upstream origin $BRANCH
          echo "Restore main"
          git checkout main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
